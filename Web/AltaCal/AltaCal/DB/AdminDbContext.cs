// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace AltaCal
{
    public partial class AdminDbContext : DbContext
    {
        public AdminDbContext()
        {
        }

        public AdminDbContext(DbContextOptions<AdminDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Arrangementer> Arrangementers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=admin-105881.mssql.stwcp.net;Initial Catalog=105881-admin;Persist Security Info=True;User ID=105881_kr28513;Password=Maine1953");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity<Arrangementer>(entity =>
            {
                //entity.HasIndex(e => e.SesId)
                //    .HasName("IX_Arrangementer");

                //entity.HasIndex(e => e.TurReturId)
                //    .HasName("IX_Arrangementer_2");

                entity.Property(e => e.ArrNavn).HasDefaultValueSql("('ArrNavn')");

                //entity.Property(e => e.Deltagelse).HasDefaultValueSql("((0))");

                //entity.Property(e => e.Distanse).HasDefaultValueSql("((0))");

                //entity.Property(e => e.Gangetid).HasDefaultValueSql("((0))");

                //entity.Property(e => e.Kontingent).HasDefaultValueSql("((0))");

                //entity.Property(e => e.Kostdag).HasDefaultValueSql("((0))");

                //entity.Property(e => e.SesId).HasDefaultValueSql("((110))");

                //entity.Property(e => e.SsmaTimeStamp).IsRowVersion();

                entity.Property(e => e.Sted).HasDefaultValueSql("('Sted')");

                //entity.Property(e => e.TurReturId).HasDefaultValueSql("((0))");

                //entity.Property(e => e.VaktlengdeLand).HasDefaultValueSql("((0))");

                //entity.Property(e => e.VaktlengdeSeilas).HasDefaultValueSql("((0))");

                //entity.Property(e => e.Varighet).HasDefaultValueSql("((2))");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}